有些类在设计时，可能只知道它应该提供哪些功能，并且没有足够的信息来确定功能具体怎么实现。或者这些类只是一种概念，并不会用它来创建对象。
例如：
class Shape {
     void draw()  {  }
}

对于这样的类，我们可以认为它是抽象类，没有具体含义。
或者可以认为类中的那些不确定如何实现的方法是抽象方法。


抽象方法：
用关键字abstract修饰的方法。
只表达概念，没有具体实现代码的方法。
 例如：
         abstract void draw();

抽象方法，不需要给出方法体，直接以“;”结束。
构造方法不能声明为抽象方法。

抽象类
用关键字abstract修饰的类。
只用来表达概念，无法构造出来实体（对象）的类
例如：abstract class A {
                     … …
                  }

abstract类里可以有abstract方法，也可以没有。
有abstract方法的类，必须声明为abstract类。


